stages:
    - build-testdb
    - build-tapi
    - build-cbuilder
    - build-cserver
    - build-cacquisition
    - deploy

build-testdb:
    stage: build-testdb
    script:
        - echo "Starting build test db"
        - if [[ $(docker ps -aq --filter 'ancestor=testdbservice:latest') ]]; then docker rm --force $(docker ps -aq --filter 'ancestor=testdbservice:latest'); else echo 'deleted';fi
        - docker build . -f Dockerfile_tdb  -t testdbservice

build-tapi:
    stage: build-tapi
    script:
        - echo "Starting build test api"
        - if [[ $(docker ps -aq --filter 'ancestor=testapiservice:latest') ]]; then docker rm --force $(docker ps -aq --filter 'ancestor=testapiservice:latest'); else echo 'deleted';fi
        - docker build . -f Dockerfile_tapi  -t testapiservice

build-cbuilder:
    stage: build-cbuilder
    script:
        - echo "Starting build contextbuilder"
        - if [[ $(docker ps -aq --filter 'ancestor=contextbuilderservice:latest') ]]; then docker rm --force $(docker ps -aq --filter 'ancestor=contextbuilderservice:latest'); else echo 'deleted';fi
        - docker build . -f Dockerfile_cb -t contextbuilderservice

build-cacquisition:
    stage: build-cacquisition
    script:
        - echo "Starting build Context Acquisition"
        - if [[ $(docker ps -aq --filter 'ancestor=contextacquisition:latest') ]]; then docker rm --force $(docker ps -aq --filter 'ancestor=contextacquisition:latest'); else echo 'deleted';fi
        - docker build . -t contextacquisition -f Dockerfile_ca

build-cserver:
    stage: build-cserver
    script:
        - echo "Starting build Context server"
        - if [[ $(docker ps -aq --filter 'ancestor=contextservice:latest') ]]; then docker rm --force $(docker ps -aq --filter 'ancestor=contextservice:latest'); else echo 'deleted';fi
        - docker build . -t contextservice -f Dockerfile_cs


deploy:
    stage: deploy
    script:
        - echo "Starting deployment"
        - docker run -d -p 8180:80 --name testdbservice -e DBNAME=ContinentalTestDbSERVER -e BUILDER=http://192.168.28.86:8181 -e DBHOST=192.168.28.86 -e DBUSER=sa -e DBPASS=xA6UCjFY -e INTEGRATIONHOST=192.168.28.86:8089 -e GRAPHGENERATORHOST=192.168.28.86:8098 -e NOTIFICATIONSHOST=192.168.28.86:8091 -e RABBITHOST=192.168.28.86 testdbservice
        - docker run -d -p 8184:80 --name testapiservice -e DBNAME=ContinentalTestDbSERVER -e DBHOST=192.168.28.86 -e DBUSER=sa -e DBPASS=xA6UCjFY -e INTEGRATIONHOST=192.168.28.86:8089 -e GRAPHGENERATORHOST=192.168.28.86:8098 -e NOTIFICATIONSHOST=192.168.28.86:8091 -e RABBITHOST=192.168.28.86 testapiservice
        - docker run -d -p 8181:80 --name contextbuilderservice -e DBNAME=ContextDbSERVER -e DBHOST=192.168.28.86 -e DBUSER=sa -e DBPASS=xA6UCjFY -e INTEGRATIONHOST=192.168.28.86:8089 -e GRAPHGENERATORHOST=192.168.28.86:8098 -e NOTIFICATIONSHOST=192.168.28.86:8091 -e RABBITHOST=192.168.28.86 contextbuilderservice
        - docker run -d -p 8182:80 --name contextservice -e DBNAME=ContextDbSERVER -e DBHOST=192.168.28.86 -e DBUSER=sa -e DBPASS=xA6UCjFY -e INTEGRATIONHOST=192.168.28.86:8089 -e GRAPHGENERATORHOST=192.168.28.86:8098 -e NOTIFICATIONSHOST=192.168.28.86:8091 -e RABBITHOST=192.168.28.86 contextservice
        - docker run -d -p 8183:80 --name contextacquisition -e DBNAME=ContextDbSERVER -e DBHOST=192.168.28.86 -e CONTAPI=http://192.168.28.86:8184 -e DBUSER=sa -e DBPASS=xA6UCjFY -e INTEGRATIONHOST=192.168.28.86:8089 -e GRAPHGENERATORHOST=192.168.28.86:8098 -e NOTIFICATIONSHOST=192.168.28.86:8091 -e RABBITHOST=192.168.28.86 contextacquisition
